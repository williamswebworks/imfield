<?php
// $Id$

/**
 * Implements hook_field_info().
 */
function imfield_field_info() {
  return array(
    'imfield_icq' => array(
      'label' => t('ICQ Field'),
      'description' => t('This field stores an ICQ number'),
      'default_widget' => 'imfield_textfield',
      'default_formatter' => 'imfield_onlinestatus',
    ),
    'imfield_skype' => array(
      'label' => t('Skype Field'),
      'description' => t('This field stores a Skype account name'),
      'default_widget' => 'imfield_textfield',
      'default_formatter' => 'imfield_onlinestatus',
    ),
  );
}

/**
 * Implements hook_field_is_empty().
 */
function imfield_field_is_empty($item, $field) {
  return !isset($item['value']) || $item['value'] === '';
}

/**
 * Implements hook_field_formatter_info().
 */
function imfield_field_formatter_info() {
  return array(
    'imfield_onlinestatus' => array(
      'label' => t('Onlinestatus'),
      'field types' => array('imfield_icq', 'imfield_skype'),
    ),
    'imfield_unformatted' => array(
      'label' => t('Unformatted'),
      'field types' => array('imfield_icq', 'imfield_skype'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function imfield_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  
  foreach ($items as $delta => $item) {
    // Gather data
    $data = array(
      'account' => $item['value'],
      'url' => imfield_statusurl($field['type'], $item['value']),
      'element' => $item,
      'field' => $instance,
    );
    
    // Go and theme it
    $element[$delta] = array(
      '#markup' => theme($display['type'], $data),
    );
  }
  
  return $element;
}

/**
 * Implements hook_theme().
 */
function imfield_theme($existing, $type, $theme, $path) {
  return array(
    'imfield_onlinestatus' => array(
      'variables' => array(
        'account' => NULL,
        'url' => NULL,
        'element' => NULL,
        'field' => NULL,
      ),
    ),
    'imfield_unformatted' => array(
      'variables' => array(
        'account' => NULL,
        'url' => NULL,
        'element' => NULL,
        'field' => NULL,
      ),
    ),
  );
}

/**
 * Theme function for imfield_onlinestatus.
 */
function theme_imfield_onlinestatus($vars) {
  $image = theme_image(array(
    'path' => $vars['url'],
    'title' => t('Onlinestatus'),
    'attributes' => array(),
  ));
  return $image . '&nbsp;' . check_plain($vars['account']);
}

/**
 * Theme function for imfield_unformatted.
 */
function theme_imfield_unformatted($vars) {
  return check_plain($vars['account']);
}

/**
 * Get the URL of an account's status indicator image.
 */
function imfield_statusurl($type, $username) {
  switch($type) {
    case 'icq':
    case 'imfield_icq':
      return 'http://status.icq.com/online.gif?icq=' . $username . '&img=5';
    
    case 'skype':
    case 'imfield_skype':
      return 'http://mystatus.skype.com/smallicon/' . $username . '?dontcache';
  }
}

/**
 * Implements hook_field_widget_info().
 */
function imfield_field_widget_info() {
  return array(
    'imfield_textfield' => array(
      'label' => t('Textfield'),
      'field types' => array('imfield_icq', 'imfield_skype'),
    ),
  );
}

/**
 * Implements hook_field_widget_form().
 */
function imfield_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $value = isset($items[$delta]['value']) ? $items[$delta]['value'] : '';
  
  $element += array(
    '#type' => 'textfield',
    '#default_value' => $value,
  );
  
  $element['#element_validate'][] = 'imfield_field_widget_validate';
  
  return array('value' => $element);
}

/**
 * FAPI validation of an individual icq element.
 */
function imfield_field_widget_validate($element, &$form_state) {
  // Trim value
  $value = trim($element['#value']);
  if($value === '') {
    return;
  }
  
  // Prepare validation
  $field = field_widget_field($element, $form_state);
  $instance = field_widget_instance($element, $form_state);
  $error = FALSE;
  
  // Validate
  switch($field['type']) {
    case 'imfield_icq':
      // ICQ:
      // 5 to 10 numbers, ignore spaces and dashes.
      // Based on experiments with ICQ APIs.
      // -- It would be better, if there was an official reference. XXX
      $value = preg_replace('/\s|-/', '', $value);
      if(!preg_match('/^[0-9]{5,10}$/', $value)) {
        $error = 'The ICQ number is not valid.';
      }
      break;
    
    case 'imfield_skype':
      // Skype:
      // Your Skype Name is your unique username for Skype.
      // It must be between 6-32 characters, start with a letter and contain
      // only letters and numbers (no spaces or special characters).
      // -- from Skype registration form
      if(!preg_match('/^[A-Za-z][A-Za-z0-9]{5,31}$/', $value)) {
        $error = 'The Skype account name is not valid.';
      }
      break;
  }
  
  // Display error
  if($error) {
    form_error($element, $error);
  }
  form_set_value($element, $value, $form_state);
}

/**
 * Implements hook_field_widget_error().
 */
function imfield_field_widget_error($element, $error, $form, &$form_state) {
  form_error($element['value'], $error['message']);
}
